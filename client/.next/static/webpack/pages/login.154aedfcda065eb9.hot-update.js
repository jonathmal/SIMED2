"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "./src/services/api.service.js":
/*!*************************************!*\
  !*** ./src/services/api.service.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiService: () => (/* binding */ apiService)\n/* harmony export */ });\n/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.service */ \"./src/services/auth.service.js\");\n// client/src/services/api.service.js\n\nconst BASE_URL = 'http://localhost:5001'; // Backend URL\nconst ERROR_MESSAGES = {\n    UNAUTHORIZED: 'Su sesión ha expirado o no tiene autorización',\n    SERVER_ERROR: 'Error en el servidor',\n    NETWORK_ERROR: 'Error de conexión',\n    INVALID_RESPONSE: 'Respuesta inválida del servidor',\n    SESSION_EXPIRED: 'Su sesión ha expirado'\n};\nconst formatUrl = (endpoint)=>{\n    // Remove leading slash from endpoint if it exists\n    const formattedEndpoint = endpoint.startsWith('/') ? endpoint : \"/\".concat(endpoint);\n    return \"\".concat(BASE_URL).concat(formattedEndpoint);\n};\nconst handleResponse = async (response)=>{\n    try {\n        if (!response) {\n            throw new Error(ERROR_MESSAGES.NETWORK_ERROR);\n        }\n        // Get response data\n        const contentType = response.headers.get('content-type');\n        let data;\n        if (contentType && contentType.includes('application/json')) {\n            data = await response.json();\n        } else {\n            console.error('Unexpected content type:', contentType);\n            throw new Error(ERROR_MESSAGES.INVALID_RESPONSE);\n        }\n        // Handle unsuccessful responses\n        if (!response.ok) {\n            if (response.status === 401) {\n                _auth_service__WEBPACK_IMPORTED_MODULE_0__.authService.clearSession();\n                throw new Error(ERROR_MESSAGES.UNAUTHORIZED);\n            }\n            throw new Error(data.error || data.message || \"\".concat(ERROR_MESSAGES.SERVER_ERROR, \": \").concat(response.status));\n        }\n        return data;\n    } catch (error) {\n        console.error('Response handling error:', error);\n        throw error;\n    }\n};\nconst getAuthHeaders = ()=>{\n    const token = localStorage.getItem('token');\n    const headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    };\n    if (token) {\n        headers.Authorization = \"Bearer \".concat(token);\n    }\n    return headers;\n};\nconst apiService = {\n    get: async (endpoint)=>{\n        try {\n            const url = formatUrl(endpoint);\n            console.log(\"Making GET request to: \".concat(url)); // Changed to use url\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: getAuthHeaders(),\n                credentials: 'include'\n            });\n            return handleResponse(response);\n        } catch (error) {\n            console.error('GET request failed:', error);\n            throw error;\n        }\n    },\n    post: async (endpoint, data)=>{\n        try {\n            const url = formatUrl(endpoint);\n            console.log(\"Making POST request to: \".concat(url)); // Changed to use url\n            console.log('Request data:', data);\n            const response = await fetch(url, {\n                method: 'POST',\n                headers: getAuthHeaders(),\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n            return handleResponse(response);\n        } catch (error) {\n            console.error('POST request failed:', error);\n            throw error;\n        }\n    },\n    put: async (endpoint, data)=>{\n        try {\n            const url = formatUrl(endpoint);\n            console.log(\"Making PUT request to: \".concat(url)); // Changed to use url\n            const response = await fetch(url, {\n                method: 'PUT',\n                headers: getAuthHeaders(),\n                credentials: 'include',\n                body: JSON.stringify(data)\n            });\n            return handleResponse(response);\n        } catch (error) {\n            console.error('PUT request failed:', error);\n            throw error;\n        }\n    },\n    delete: async (endpoint)=>{\n        try {\n            const url = formatUrl(endpoint);\n            console.log(\"Making DELETE request to: \".concat(url)); // Changed to use url\n            const response = await fetch(url, {\n                method: 'DELETE',\n                headers: getAuthHeaders(),\n                credentials: 'include'\n            });\n            return handleResponse(response);\n        } catch (error) {\n            console.error('DELETE request failed:', error);\n            throw error;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/api.service.js\n"));

/***/ })

});